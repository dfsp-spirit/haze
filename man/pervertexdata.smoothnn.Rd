% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smooth_nn.R
\name{pervertexdata.smoothnn}
\alias{pervertexdata.smoothnn}
\title{Smooth per-vertex data based on mesh.}
\usage{
pervertexdata.smoothnn(surface, data, num_iter, k = 1L, method = "C++")
}
\arguments{
\item{surface}{a mesh, represented as an \code{fs.surface} instance from the \code{freesurferformats} package or a \code{tmesh3d} instance from \code{rgl}, or a character string representing the path of a mesh to load with \code{freesurferformats::read.fs.surface}.}

\item{data}{numerical vector of per-vertex-data for the mesh, one value per vertex. Data values of \code{NA} will be ignored, allowing you to mask parts of the data.}

\item{num_iter}{positive integer, number of smoothing iterations.}

\item{k}{scalar positive integer, the k value for the k-ring neighborhood. For k=1, this function computes the adjacency list representation of the graph (where the neighbors include the vertex itself).}

\item{method}{character string, one of 'C++' or 'R'. The C++ version is much faster (about 50 times faster on our test machine), and there is little reason to ever use the R version in production code, so just ignore this.}
}
\value{
numerical vector, the smoothed data.
}
\description{
Smooth per-vertex data based on mesh.
}
\seealso{
\code{\link{pervertexdata.smoothnn.adj}} if you already have pre-computed adjacency data for the mesh. Using that data can increase performance considerably, especially if you need to smooth many data sets.
}
